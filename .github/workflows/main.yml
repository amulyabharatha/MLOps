name: MLOps Pipeline

on:
  push:
    branches:
      - main

jobs:
  train:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Specify your Python version 
        
    - name: Install dependencies
      run: pip install -r requirements.txt    

    - name: Train the model
      run: python train.py

    - name: Upload model artifact
      uses: actions/upload-artifact@v2
      with:
        name: trained-model
        path: model.pkl
    - name: Debug Artifact
      run: |
         ls -R  # List files recursively
         find . -name model.pkl  # Find the model.pkl file
         FULL_PATH=$(readlink -f model.pkl)  
         echo $FULL_PATH

    - name: Download model artifact
      uses: actions/download-artifact@v2
      with:
        name: trained-model
        path: ./$FULL_PATH
  
      

    - name: Test the model
      run: python test.py

  Build_docker_image :
    runs-on: ubuntu-latest
    needs: train
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Specify your Python version

    - name: Download model artifact
      uses: actions/download-artifact@v2
      with:
        name: trained-model
        path: model.pkl
             
    - name: Build Docker Image
      run: docker build -t iris-classifier .

  deploy:
    runs-on: ubuntu-latest
    needs:  Build_docker_image
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Download model artifact
      uses: actions/download-artifact@v2
      with:
        name: trained-model
        path: ./$FULL_PATH
        
    - name: Log in to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Tag and push Docker image
      run: |
        docker tag iris-classifier ${{ secrets.DOCKER_USERNAME }}/iris-classifier:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/iris-classifier:latest

      
    

    
     

